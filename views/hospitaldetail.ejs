<head>
    <!-- 병원상세페이지 슬라이드를 위한 추가 -->
    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
        crossorigin="anonymous"
    ></script>
    <link
        href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
        rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
        crossorigin="anonymous"
    />
</head>

<style>
    /* .hospital_all {
        box-sizing: border-box;
    }

    .container_hos {
        width: 600px;
        
    }

    .inner_hos {
        width: 100%;
        display: flex;
        
        align-items: flex-start;
        margin: 30px 0;
    } */

    #index_01 {
        width: 1200px;
        height: 400px;
        border: 1px solid dimgrey;
        margin: 0 auto;
    }

    #slide1 {
        height: 300px;
        overflow: hidden;
        border-bottom: 1px solid dimgrey;
    }
    #slide1 > ul {
        width: 3600px;
        font-size: 0;
    }
    #slide1 > ul > li {
        display: inline-block;
        font-size: 0;
    }
</style>

<div class="hospital_all">
    <div id="index_01">
        <div id="slide1">
            <ul id="hospital-image"></ul>
        </div>
    </div>

    <!-- <div class="container_hos">
        <div class="inner_hos" id="hospital-image">
            이미지
        </div>
    </div>
    <button class="prev_bt" type="button">prev</button>
    <button class="next_bt" type="button">next</button> -->

    <div>
        <table id="departmentList">
            <tr>
                <th>진료과</th>
            </tr>
        </table>
    </div>

    <div>
        <table id="doctorsList">
            <tr>
                <th>의사이름</th>
                <th>의사사진</th>
                <th>의사소개</th>
                <th>진료과</th>
                <th>근무날</th>
            </tr>
        </table>
    </div>
    <div class="review">
        <table id="reviewList">
            <tr>
                <th>#</th>
                <th>작성자</th>
                <th>내용</th>
                <th>평점</th>
                <th>작성날짜</th>
            </tr>
        </table>
    </div>
    <div>
        <button onclick="goToReservation()">예약하기</button>
    </div>
</div>

<script>
    setInterval(function () {
        $('#slide1>ul').delay(2500);
        $('#slide1>ul').animate({ marginLeft: '-1200px' });
        $('#slide1>ul').delay(2500);
        $('#slide1>ul').animate({ marginLeft: '-2400px' });
        $('#slide1>ul').delay(2500);
        $('#slide1>ul').animate({ marginLeft: '0px' });
    });

    $(document).ready(function () {
        getReview();
        getdoctor();
        getdepartment();
        gethospitalimage();
        // getworktime()
    });

    function get_cookie(name) {
        var value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');
        return value ? value[2] : null;
    }

    function getCookie(name) {
        var nameOfCookie = name + '=';

        var x = 0;

        while (x <= document.cookie.length) {
            var y = x + nameOfCookie.length;

            if (document.cookie.substring(x, y) == nameOfCookie) {
                if ((endOfCookie = document.cookie.indexOf(';', y)) == -1)
                    endOfCookie = document.cookie.length;

                return unescape(document.cookie.substring(y, endOfCookie));
            }

            x = document.cookie.indexOf(' ', x) + 1;

            if (x == 0) break;
        }

        return '';
    }
    // 만ㄹ되면 실패값으로 리프 값을 요청하는 api ㅁㄴ들고 해당유저의 리프값을 주면 된다
    const whenExpiredToken = function () {
        const refreshToken = getCookie('refreshToken');

        $.ajax({
            type: 'GET',
            url: `/api/token`,
            headers: { 'X-Refresh-Token': refreshToken },
            // 이미서버에서 쿠키를 전송해서 필요없을 듯
            dataType: 'json',
            success: function (response) {
                const newAccessToken = response.newAccessToken;
                const baseRefreshToken = response.token.token;
                console.log(newAccessToken);
                console.log(baseRefreshToken);
                $.ajaxSetup({ headers: { Authorization: 'Bearer ' + newAccessToken } });
            },
            error: function (error) {
                console.log(error.responseJSON.message);
            },
        });
    };

    // 새로운 헤더 토큰 === 새로운 쿠키의 토큰
    const id = window.location.pathname.split('/')[2];

    function gethospitalimage() {
        console.log('의사 사진 내나');
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;
                console.log('의사 사진 성공');
                // console.log("hospitalData.oneHospital", hospitalData.oneHospital.hospitalImage[1].url)
                // <img src ="${hospitalimage}" class="hospitald_img" alt="병원사진">
                // <li>
                //             <a href="#"><img style="height: 300px;" src="${hospitalimage}" alt="슬라이드1"></a>
                //         </li>
                for (let i = 0; i < hospitalData.oneHospital.hospitalImage.length; i++) {
                    let hospitalimage = hospitalData.oneHospital.hospitalImage[i].url;

                    let temp_html = `

                        <li><img src="${hospitalimage}" alt=""></li>

                       `;

                    $('#hospital-image').append(temp_html);
                }
            },
            // 토큰 재발급 api 함수
            error: function (error) {
                console.log('테스트');
                if (error.responseJSON.message === 'accessToken 만료') {
                    console.log('의사 사진 에러-1');
                    console.log(error.responseJSON.message);
                    whenExpiredToken();
                    console.log('whenExpiredToken 밖으로 나옴');
                    gethospitalimage();
                } else {
                    console.log('의사 사진 에러-2');
                    console.log('에러', error);
                }
            },
        });
    }

    //의사들 진료과목
    function getdepartment() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                for (let i = 0; i < hospitalData.oneHospital.doctors.length; i++) {
                    let department = hospitalData.oneHospital.doctors[i].department;

                    let temp_html = `
                            <tr>
                                <td>${department}</td>
                            </tr>
                       `;

                    $('#departmentList').append(temp_html);
                }
            },
            // error: function(error){
            //     console.log(error.responseJSON)
            // }
            // 토큰 재발급 api 함수
            error: function (error) {
                if (error.message === 'accessToken 만료') {
                    whenExpiredToken();
                } else {
                    console.log(error);
                }
            },
        });
    }

    //의사 이미지 및 정보
    function getdoctor() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;

                for (let i = 0; i < hospitalData.oneHospital.doctors.length; i++) {
                    let doctors = hospitalData.oneHospital.doctors[i].doctors;
                    let doctorImage = hospitalData.oneHospital.doctors[i].doctorImage;
                    let doctorContent = hospitalData.oneHospital.doctors[i].doctorContent;
                    let department = hospitalData.oneHospital.doctors[i].department;

                    let workTime = hospitalData.oneHospital.doctors[i].workTime;
                    let workTimeSum = '';
                    for (let j = 0; j < workTime.length; j++) {
                        let day = workTime[j].day;
                        let start = workTime[j].start;
                        let end = workTime[j].end;

                        switch (day) {
                            case 1:
                                day = '월';
                                break;
                            case 2:
                                day = '화';
                                break;
                            case 3:
                                day = '수';
                                break;
                            case 4:
                                day = '목';
                                break;
                            case 5:
                                day = '금';
                                break;
                            case 6:
                                day = '토';
                                break;
                            default:
                                day = '일';
                                break;
                        }

                        workTimeSum += `${day}요일 ${start}~${end}`;
                    }

                    let temp_html = `<tbody>
                            <tr>
                            <td>${doctors}</td>
                            <th><img src="${doctorImage}" style="width: 100px" alt="의사사진">의사사진</th>
                            <td>${doctorContent}</td>
                            <td>${department}</td>
                            <td>${workTimeSum}</td>
                            </tr>
                        </tbody>`;

                    $('#doctorsList').append(temp_html);
                }
            },
            // error: function(error){
            //     console.log(error.responseJSON)
            // }
            // 토큰 재발급 api 함수
            error: function (error) {
                if (error.message === 'accessToken 만료') {
                    whenExpiredToken();
                } else {
                    console.log(error);
                }
            },
        });
    }

    //리뷰조회
    function getReview() {
        $.ajax({
            type: 'GET',
            url: `/api/hospitals/detail/${id}`,
            dataType: 'json',
            success: function (response) {
                const hospitalData = response;
                // console.log('리뷰에서', hospitalData.oneHospital.reviews[0].name.name);

                for (let i = 0; i < hospitalData.oneHospital.reviews.length; i++) {
                    // let userId = hospitalData.oneHospital.reviews[i].userId;
                    // let name = hospitalData.oneHospital.reviews[i].name.name;
                    let contents = hospitalData.oneHospital.reviews[i].contents;
                    let star = hospitalData.oneHospital.reviews[i].star;
                    let createdAt = hospitalData.oneHospital.reviews[i].createdAt;

                    // createdAt = createdAt.getDate()

                    const dateData = new Date(createdAt);
                    const year = dateData.getFullYear();
                    const month = dateData.getMonth() + 1;
                    const date = dateData.getDate();

                    let temp_html = `<tbody>
                            <tr>
                                <th scope="row">${i + 1}</th>
                                <th>${name}</th>
                                <th>${contents}</th>
                                <th>${star}</th>
                                <th>${year}년 ${month}월 ${date}일</th>
                            </tr>
                        </tbody>`;

                    $('#reviewList').append(temp_html);
                }
            },
            // error: function(error){
            //     console.log(error.responseJSON)
            // }
            // 토큰 재발급 api 함수
            error: function (error) {
                if (error.message === 'accessToken 만료') {
                    whenExpiredToken();
                } else {
                    console.log(error);
                }
            },
        });
    }

    // $.ajax({
    //     url: ``,
    //     type: 'get',
    //     headers: {
    //         'X-Refresh-Token': refreshToken
    //         // 'Authentication': document.cookie(res.accessToken)
    //     },
    //     success: function(response) {
    //         const newAccessToken = response.access_token;

    //     },
    //     error: function(error) {
    //         $.ajax({
    //             url:`/api/token/${userId}`,
    //             headers: {
    //                 'Authorization': 'Bearer ' + newAccessToken
    //             },
    //             success: function(response) {
    //                 const newAccessToken = response.access_token;
    //             }
    //         });
    //         console.log(error);
    //     }
    // });

    function goToReservation() {
        const id = window.location.pathname.split('/')[2];
        location.href = `/users/reservation/${id}`;
    }
</script>
